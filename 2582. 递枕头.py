class Solution:
    def passThePillow(self, n: int, time: int) -> int:
        k, mod = divmod(time, n - 1)
        return n - mod if k & 1 else mod + 1


'''
1.首先通过 divmod 函数计算出 time 可以被 (n-1) 整除的商 k 和余数 mod。这里的 n-1 是因为我们需要计算的是传递的次数，而最后一次传递不会涉及到枕头的交接，所以我们只考虑 n-1 次交接。
然后使用了一个条件表达式来返回结果。如果 k 是奇数，那么返回 n - mod，否则返回 mod + 1。
2.表达式"k & 1"将整数k与1进行按位与运算，该表达式通常用于判断一个整数是否为奇数或偶数。如果k的最低位为1，则k为奇数；否则，k为偶数。
3.如果 k 是奇数，那么枕头在初始的人手中的时间是 (n-1) - mod，因为最后一次传递（即第 k 次）的交接点是在初始的人手中的。所以在这次传递中，枕头在 n-mod 个人手中停留过。
如果 k 是偶数，那么枕头在初始的人手中的时间是 mod，因为最后一次传递（即第 k 次）的交接点是在初始的人的下一个人手中的。所以在这次传递中，枕头在 mod+1 个人手中停留过。
'''
