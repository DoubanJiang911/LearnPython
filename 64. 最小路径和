class Solution:
    def minPathSum(self, grid: List[List[int]]) -> int:
        m = len(grid)
        n = len(grid[0])
        for i in range(0, m):
            for j in range(0, n):
                if i == 0 and j == 0:  # 起始位置跳过
                    continue
                elif i == 0:
                    grid[i][j] += grid[i][j-1]  # 顶部边界位置，只能合并左侧数值
                elif j == 0:
                    grid[i][j] += grid[i-1][j]  # 左侧边界位置，只能合并上方数值
                else:
                    grid[i][j] += min(grid[i][j-1], grid[i-1][j])  # 非边界位置，可选上方和左侧数值中较小的合并
        return grid[-1][-1]
    
